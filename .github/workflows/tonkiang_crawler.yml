name: CCTV Crawler

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  crawl-iptv:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install requests

    - name: Create output directory
      run: mkdir -p output

    - name: Run crawler
      id: crawler
      run: |
        python scripts/tonkiang_crawler.py
      env:
        GITHUB_ACTIONS: true
        OUTPUT_DIR: "output"

    - name: Check file changes
      id: check_changes
      run: |
        if [ -f "output/ysws.m3u" ]; then
          # 添加文件到暂存区以便比较
          git add output/ysws.m3u
          
          # 检测工作区变化
          if git diff --cached --quiet; then
            echo "文件内容未变化，跳过提交"
          else
            echo "::set-output name=has_changes::true"
            echo "检测到文件变化，准备提交..."
          fi
        else
          echo "M3U文件未生成"
          exit 1
        fi

    - name: Commit and push if changed
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git commit -m "Update IPTV list - $(date +'%Y-%m-%d %H:%M')"
        git push origin main

    - name: Send notification on success
      if: success() && steps.check_changes.outputs.has_changes == 'true'
      uses: actions/github-script@v5
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "✅ IPTV列表更新成功",
            body: `成功更新IPTV列表，包含 ${process.env.VALID_LINKS} 个有效链接`
          })
      env:
        VALID_LINKS: ${{ steps.crawler.outputs.valid_links }}

    - name: Send notification on failure
      if: failure()
      uses: actions/github-script@v5
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "🚨 IPTV列表更新失败",
            body: "请检查[工作流日志](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          })
